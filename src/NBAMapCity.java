/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ds_projectreal;

import ds_project.NBACities;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class NBAMapCity extends javax.swing.JFrame {

    public Graph<String,Integer> nbaGraph;
    /**
     * Creates new form NBAMapCity
     */
    public NBAMapCity() {
        initComponents();
        nbaGraph=new Graph<>();
        
    }
    
    public NBAMapCity(Graph<String,Integer> nbaGraph){
        initComponents();
        this.nbaGraph=nbaGraph;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Homepage = new javax.swing.JButton();
        DFS = new javax.swing.JButton();
        BFS = new javax.swing.JButton();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ds_projectreal/pic.jpeg"))); // NOI18N

        Homepage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ds_projectreal/Homepageimage.jpg"))); // NOI18N
        Homepage.setText("Homepage");
        Homepage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomepageActionPerformed(evt);
            }
        });

        DFS.setText("DFS");
        DFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFSActionPerformed(evt);
            }
        });

        BFS.setText("BFS");
        BFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BFSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(Homepage)
                        .addGap(74, 74, 74)
                        .addComponent(DFS)
                        .addGap(75, 75, 75)
                        .addComponent(BFS))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1)))
                .addContainerGap(212, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BFS, DFS, Homepage});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Homepage)
                    .addComponent(DFS)
                    .addComponent(BFS))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {BFS, DFS, Homepage});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>   
    
    

    private void HomepageActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        HomePage home=new HomePage();
        home.setVisible(true);
        this.setVisible(false);
    }                                        

    private void DFSActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        if (nbaGraph == null) {
            JOptionPane.showMessageDialog(this, "Graph is not initialized.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String result = nbaGraph.DFS("San Antonio(Spurs)");
            JOptionPane.showMessageDialog(this, result, "DFS Result", JOptionPane.INFORMATION_MESSAGE);
        }
    }                                   

    private void BFSActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        if (nbaGraph == null) {
            JOptionPane.showMessageDialog(this, "Graph is not initialized.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String result = nbaGraph.BFS("San Antonio(Spurs)");
            JOptionPane.showMessageDialog(this, result, "BFS Result", JOptionPane.INFORMATION_MESSAGE);
        }
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        Graph<String,Integer> nbaGraph=new Graph<>();
        String A="San Antonio(Spurs)";
        String B="Golden State(Warriors)";
        String C="Boston(Celtics)";
        String D="Miami(Heat)";
        String E="Los Angeles(Lakers)";
        String F="Phoenix(Suns)";
        String G="Orlando(Magic)";
        String H="Denver(Nuggets)";
        String I="Oklahoma City(Thunder)";
        String J="Houston(Rockets)";
        
        String[] cities={A, B, C, D, E, F, G, H, I, J};
        //String[] teamNames={"Spurs", "Warriors", "Celtics", "Heat", "Lakers", "Suns", "Magic", "Nuggets", "Thunder", "Rockets"};
        for(String i:cities)
            nbaGraph.addVertex(i);
//        for(String j:teamNames)
//            nbaGraph.addVertex(j);
        
        System.out.println("Cities and their vertices: ");
        for(int i=0;i<nbaGraph.getSize();i++)
            System.out.println(i+" : "+nbaGraph.getVertex(i));
        
        System.out.println("");
        System.out.println("Creating graph: ");
        nbaGraph.addUndirectedEdge(A, F, 500);
        nbaGraph.addUndirectedEdge(A, G, 1137);
        nbaGraph.addUndirectedEdge(A, I, 678);
        nbaGraph.addUndirectedEdge(A, J, 1137);
        nbaGraph.addUndirectedEdge(B,E,554);
        nbaGraph.addUndirectedEdge(B,H,1507);
        nbaGraph.addUndirectedEdge(B,I,2214);
        nbaGraph.addUndirectedEdge(C,D,3045);
        nbaGraph.addUndirectedEdge(C,H,2845);
        nbaGraph.addUndirectedEdge(C,J,2584);
        nbaGraph.addUndirectedEdge(D,G,268);
        nbaGraph.addUndirectedEdge(E,F,577);
        nbaGraph.addUndirectedEdge(E,I,1901);
        nbaGraph.addUndirectedEdge(G,J,458);
        nbaGraph.addUndirectedEdge(H,I,942);
        nbaGraph.addUndirectedEdge(I,J,778);
        

        nbaGraph.printEdges();
        
        System.out.println("");
        //System.out.println(nbaGraph.getNeighbours(A));
        System.out.println("Depth-First-Search Algorithm: ");
        nbaGraph.DFS(A);
//        
        System.out.println("");
        System.out.println("Breadth-First-Search Algorithm: ");
        nbaGraph.BFS(A);
        
        new NBAMapCity(nbaGraph).setVisible(true);
        //new NBAMapCity().setVisible(true);
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NBAMapCity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NBAMapCity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NBAMapCity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NBAMapCity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NBAMapCity(nbaGraph).setVisible(true);
            }
        });
        
        
        

    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton BFS;
    private javax.swing.JButton DFS;
    private javax.swing.JButton Homepage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration                   
}
